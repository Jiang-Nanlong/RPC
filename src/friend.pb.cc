// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: friend.proto

#include "../include/friend.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_friend_2eproto::google::protobuf::internal::SCCInfo<0> scc_info_ResultCode1_friend_2eproto;
namespace fixbug {
  class ResultCode1DefaultTypeInternal {
  public:
    ::google::protobuf::internal::ExplicitlyConstructed<ResultCode1> _instance;
  } _ResultCode1_default_instance_;
  class FriendRequestDefaultTypeInternal {
  public:
    ::google::protobuf::internal::ExplicitlyConstructed<FriendRequest> _instance;
  } _FriendRequest_default_instance_;
  class FriendResponseDefaultTypeInternal {
  public:
    ::google::protobuf::internal::ExplicitlyConstructed<FriendResponse> _instance;
  } _FriendResponse_default_instance_;
}  // namespace fixbug
static void InitDefaultsResultCode1_friend_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::fixbug::_ResultCode1_default_instance_;
    new (ptr) ::fixbug::ResultCode1();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fixbug::ResultCode1::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ResultCode1_friend_2eproto =
{ {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResultCode1_friend_2eproto}, {} };

static void InitDefaultsFriendRequest_friend_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::fixbug::_FriendRequest_default_instance_;
    new (ptr) ::fixbug::FriendRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fixbug::FriendRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FriendRequest_friend_2eproto =
{ {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFriendRequest_friend_2eproto}, {} };

static void InitDefaultsFriendResponse_friend_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::fixbug::_FriendResponse_default_instance_;
    new (ptr) ::fixbug::FriendResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fixbug::FriendResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_FriendResponse_friend_2eproto =
    { {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsFriendResponse_friend_2eproto}, {
      &scc_info_ResultCode1_friend_2eproto.base,} };

    void InitDefaults_friend_2eproto() {
      ::google::protobuf::internal::InitSCC(&scc_info_ResultCode1_friend_2eproto.base);
      ::google::protobuf::internal::InitSCC(&scc_info_FriendRequest_friend_2eproto.base);
      ::google::protobuf::internal::InitSCC(&scc_info_FriendResponse_friend_2eproto.base);
    }

    ::google::protobuf::Metadata file_level_metadata_friend_2eproto[3];
    constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_friend_2eproto = nullptr;
    const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors_friend_2eproto[1];

    const ::google::protobuf::uint32 TableStruct_friend_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
      ~0u,  // no _has_bits_
      PROTOBUF_FIELD_OFFSET(::fixbug::ResultCode1, _internal_metadata_),
      ~0u,  // no _extensions_
      ~0u,  // no _oneof_case_
      ~0u,  // no _weak_field_map_
      PROTOBUF_FIELD_OFFSET(::fixbug::ResultCode1, errcode_),
      PROTOBUF_FIELD_OFFSET(::fixbug::ResultCode1, errmsg_),
      ~0u,  // no _has_bits_
      PROTOBUF_FIELD_OFFSET(::fixbug::FriendRequest, _internal_metadata_),
      ~0u,  // no _extensions_
      ~0u,  // no _oneof_case_
      ~0u,  // no _weak_field_map_
      PROTOBUF_FIELD_OFFSET(::fixbug::FriendRequest, id_),
      ~0u,  // no _has_bits_
      PROTOBUF_FIELD_OFFSET(::fixbug::FriendResponse, _internal_metadata_),
      ~0u,  // no _extensions_
      ~0u,  // no _oneof_case_
      ~0u,  // no _weak_field_map_
      PROTOBUF_FIELD_OFFSET(::fixbug::FriendResponse, result_),
      PROTOBUF_FIELD_OFFSET(::fixbug::FriendResponse, friends_),
    };
    static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
      { 0, -1, sizeof(::fixbug::ResultCode1)},
      { 7, -1, sizeof(::fixbug::FriendRequest)},
      { 13, -1, sizeof(::fixbug::FriendResponse)},
    };

    static ::google::protobuf::Message const* const file_default_instances[] = {
      reinterpret_cast<const ::google::protobuf::Message*>(&::fixbug::_ResultCode1_default_instance_),
      reinterpret_cast<const ::google::protobuf::Message*>(&::fixbug::_FriendRequest_default_instance_),
      reinterpret_cast<const ::google::protobuf::Message*>(&::fixbug::_FriendResponse_default_instance_),
    };

    ::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_friend_2eproto = {
      {}, AddDescriptors_friend_2eproto, "friend.proto", schemas,
      file_default_instances, TableStruct_friend_2eproto::offsets,
      file_level_metadata_friend_2eproto, 3, file_level_enum_descriptors_friend_2eproto, file_level_service_descriptors_friend_2eproto,
    };

    const char descriptor_table_protodef_friend_2eproto[] =
      "\n\014friend.proto\022\006fixbug\".\n\013ResultCode1\022\017\n"
      "\007errcode\030\001 \001(\005\022\016\n\006errmsg\030\002 \001(\014\"\033\n\rFriend"
      "Request\022\n\n\002id\030\001 \001(\r\"F\n\016FriendResponse\022#\n"
      "\006result\030\001 \001(\0132\023.fixbug.ResultCode1\022\017\n\007fr"
      "iends\030\002 \003(\0142R\n\020FriendServiceRpc\022>\n\rGetFr"
      "iendList\022\025.fixbug.FriendRequest\032\026.fixbug"
      ".FriendResponseB\003\200\001\001b\006proto3"
      ;
    ::google::protobuf::internal::DescriptorTable descriptor_table_friend_2eproto = {
      false, InitDefaults_friend_2eproto,
      descriptor_table_protodef_friend_2eproto,
      "friend.proto", &assign_descriptors_table_friend_2eproto, 268,
    };

    void AddDescriptors_friend_2eproto() {
      static constexpr ::google::protobuf::internal::InitFunc deps[1] =
      {
      };
      ::google::protobuf::internal::AddDescriptors(&descriptor_table_friend_2eproto, deps, 0);
    }

    // Force running AddDescriptors() at dynamic initialization time.
    static bool dynamic_init_dummy_friend_2eproto = []() { AddDescriptors_friend_2eproto(); return true; }();
    namespace fixbug {

      // ===================================================================

      void ResultCode1::InitAsDefaultInstance() {
      }
      class ResultCode1::HasBitSetters {
      public:
      };

#if !defined(_MSC_VER) || _MSC_VER >= 1900
      const int ResultCode1::kErrcodeFieldNumber;
      const int ResultCode1::kErrmsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

      ResultCode1::ResultCode1()
        : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
        SharedCtor();
        // @@protoc_insertion_point(constructor:fixbug.ResultCode1)
      }
      ResultCode1::ResultCode1(const ResultCode1& from)
        : ::google::protobuf::Message(),
        _internal_metadata_(nullptr) {
        _internal_metadata_.MergeFrom(from._internal_metadata_);
        errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        if (from.errmsg().size() > 0) {
          errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
        }
        errcode_ = from.errcode_;
        // @@protoc_insertion_point(copy_constructor:fixbug.ResultCode1)
      }

      void ResultCode1::SharedCtor() {
        ::google::protobuf::internal::InitSCC(
          &scc_info_ResultCode1_friend_2eproto.base);
        errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        errcode_ = 0;
      }

      ResultCode1::~ResultCode1() {
        // @@protoc_insertion_point(destructor:fixbug.ResultCode1)
        SharedDtor();
      }

      void ResultCode1::SharedDtor() {
        errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      }

      void ResultCode1::SetCachedSize(int size) const {
        _cached_size_.Set(size);
      }
      const ResultCode1& ResultCode1::default_instance() {
        ::google::protobuf::internal::InitSCC(&::scc_info_ResultCode1_friend_2eproto.base);
        return *internal_default_instance();
      }


      void ResultCode1::Clear() {
        // @@protoc_insertion_point(message_clear_start:fixbug.ResultCode1)
        ::google::protobuf::uint32 cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void)cached_has_bits;

        errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        errcode_ = 0;
        _internal_metadata_.Clear();
      }

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
      const char* ResultCode1::_InternalParse(const char* begin, const char* end, void* object,
        ::google::protobuf::internal::ParseContext* ctx) {
        auto msg = static_cast<ResultCode1*>(object);
        ::google::protobuf::int32 size; (void)size;
        int depth; (void)depth;
        ::google::protobuf::uint32 tag;
        ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
        auto ptr = begin;
        while (ptr < end) {
          ptr = ::google::protobuf::io::Parse32(ptr, &tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          switch (tag >> 3) {
            // int32 errcode = 1;
          case 1: {
            if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
            msg->set_errcode(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            break;
          }
                // bytes errmsg = 2;
          case 2: {
            if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
            ptr = ::google::protobuf::io::ReadSize(ptr, &size);
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            object = msg->mutable_errmsg();
            if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
              parser_till_end = ::google::protobuf::internal::GreedyStringParser;
              goto string_till_end;
            }
            GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
            ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
            ptr += size;
            break;
          }
          default: {
          handle_unusual:
            if ((tag & 7) == 4 || tag == 0) {
              ctx->EndGroup(tag);
              return ptr;
            }
            auto res = UnknownFieldParse(tag, { _InternalParse, msg },
              ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
            ptr = res.first;
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
            if (res.second) return ptr;
          }
          }  // switch
        }  // while
        return ptr;
      string_till_end:
        static_cast<::std::string*>(object)->clear();
        static_cast<::std::string*>(object)->reserve(size);
        goto len_delim_till_end;
      len_delim_till_end:
        return ctx->StoreAndTailCall(ptr, end, { _InternalParse, msg },
          { parser_till_end, object }, size);
      }
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
      bool ResultCode1::MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
        ::google::protobuf::uint32 tag;
        // @@protoc_insertion_point(parse_start:fixbug.ResultCode1)
        for (;;) {
          ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
          tag = p.first;
          if (!p.second) goto handle_unusual;
          switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
            // int32 errcode = 1;
          case 1: {
            if (static_cast<::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

              DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                  input, &errcode_)));
            }
            else {
              goto handle_unusual;
            }
            break;
          }

                // bytes errmsg = 2;
          case 2: {
            if (static_cast<::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
              DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_errmsg()));
            }
            else {
              goto handle_unusual;
            }
            break;
          }

          default: {
          handle_unusual:
            if (tag == 0) {
              goto success;
            }
            DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
            break;
          }
          }
        }
      success:
        // @@protoc_insertion_point(parse_success:fixbug.ResultCode1)
        return true;
      failure:
        // @@protoc_insertion_point(parse_failure:fixbug.ResultCode1)
        return false;
#undef DO_
      }
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

      void ResultCode1::SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const {
        // @@protoc_insertion_point(serialize_start:fixbug.ResultCode1)
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void)cached_has_bits;

        // int32 errcode = 1;
        if (this->errcode() != 0) {
          ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->errcode(), output);
        }

        // bytes errmsg = 2;
        if (this->errmsg().size() > 0) {
          ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
            2, this->errmsg(), output);
        }

        if (_internal_metadata_.have_unknown_fields()) {
          ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
            _internal_metadata_.unknown_fields(), output);
        }
        // @@protoc_insertion_point(serialize_end:fixbug.ResultCode1)
      }

      ::google::protobuf::uint8* ResultCode1::InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::uint8* target) const {
        // @@protoc_insertion_point(serialize_to_array_start:fixbug.ResultCode1)
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void)cached_has_bits;

        // int32 errcode = 1;
        if (this->errcode() != 0) {
          target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->errcode(), target);
        }

        // bytes errmsg = 2;
        if (this->errmsg().size() > 0) {
          target =
            ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
              2, this->errmsg(), target);
        }

        if (_internal_metadata_.have_unknown_fields()) {
          target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields(), target);
        }
        // @@protoc_insertion_point(serialize_to_array_end:fixbug.ResultCode1)
        return target;
      }

      size_t ResultCode1::ByteSizeLong() const {
        // @@protoc_insertion_point(message_byte_size_start:fixbug.ResultCode1)
        size_t total_size = 0;

        if (_internal_metadata_.have_unknown_fields()) {
          total_size +=
            ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
              _internal_metadata_.unknown_fields());
        }
        ::google::protobuf::uint32 cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void)cached_has_bits;

        // bytes errmsg = 2;
        if (this->errmsg().size() > 0) {
          total_size += 1 +
            ::google::protobuf::internal::WireFormatLite::BytesSize(
              this->errmsg());
        }

        // int32 errcode = 1;
        if (this->errcode() != 0) {
          total_size += 1 +
            ::google::protobuf::internal::WireFormatLite::Int32Size(
              this->errcode());
        }

        int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
        SetCachedSize(cached_size);
        return total_size;
      }

      void ResultCode1::MergeFrom(const ::google::protobuf::Message& from) {
        // @@protoc_insertion_point(generalized_merge_from_start:fixbug.ResultCode1)
        GOOGLE_DCHECK_NE(&from, this);
        const ResultCode1* source =
          ::google::protobuf::DynamicCastToGenerated<ResultCode1>(
            &from);
        if (source == nullptr) {
          // @@protoc_insertion_point(generalized_merge_from_cast_fail:fixbug.ResultCode1)
          ::google::protobuf::internal::ReflectionOps::Merge(from, this);
        }
        else {
          // @@protoc_insertion_point(generalized_merge_from_cast_success:fixbug.ResultCode1)
          MergeFrom(*source);
        }
      }

      void ResultCode1::MergeFrom(const ResultCode1& from) {
        // @@protoc_insertion_point(class_specific_merge_from_start:fixbug.ResultCode1)
        GOOGLE_DCHECK_NE(&from, this);
        _internal_metadata_.MergeFrom(from._internal_metadata_);
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void)cached_has_bits;

        if (from.errmsg().size() > 0) {

          errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
        }
        if (from.errcode() != 0) {
          set_errcode(from.errcode());
        }
      }

      void ResultCode1::CopyFrom(const ::google::protobuf::Message& from) {
        // @@protoc_insertion_point(generalized_copy_from_start:fixbug.ResultCode1)
        if (&from == this) return;
        Clear();
        MergeFrom(from);
      }

      void ResultCode1::CopyFrom(const ResultCode1& from) {
        // @@protoc_insertion_point(class_specific_copy_from_start:fixbug.ResultCode1)
        if (&from == this) return;
        Clear();
        MergeFrom(from);
      }

      bool ResultCode1::IsInitialized() const {
        return true;
      }

      void ResultCode1::Swap(ResultCode1* other) {
        if (other == this) return;
        InternalSwap(other);
      }
      void ResultCode1::InternalSwap(ResultCode1* other) {
        using std::swap;
        _internal_metadata_.Swap(&other->_internal_metadata_);
        errmsg_.Swap(&other->errmsg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          GetArenaNoVirtual());
        swap(errcode_, other->errcode_);
      }

      ::google::protobuf::Metadata ResultCode1::GetMetadata() const {
        ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_friend_2eproto);
        return ::file_level_metadata_friend_2eproto[kIndexInFileMessages];
      }


      // ===================================================================

      void FriendRequest::InitAsDefaultInstance() {
      }
      class FriendRequest::HasBitSetters {
      public:
      };

#if !defined(_MSC_VER) || _MSC_VER >= 1900
      const int FriendRequest::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

      FriendRequest::FriendRequest()
        : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
        SharedCtor();
        // @@protoc_insertion_point(constructor:fixbug.FriendRequest)
      }
      FriendRequest::FriendRequest(const FriendRequest& from)
        : ::google::protobuf::Message(),
        _internal_metadata_(nullptr) {
        _internal_metadata_.MergeFrom(from._internal_metadata_);
        id_ = from.id_;
        // @@protoc_insertion_point(copy_constructor:fixbug.FriendRequest)
      }

      void FriendRequest::SharedCtor() {
        id_ = 0u;
      }

      FriendRequest::~FriendRequest() {
        // @@protoc_insertion_point(destructor:fixbug.FriendRequest)
        SharedDtor();
      }

      void FriendRequest::SharedDtor() {
      }

      void FriendRequest::SetCachedSize(int size) const {
        _cached_size_.Set(size);
      }
      const FriendRequest& FriendRequest::default_instance() {
        ::google::protobuf::internal::InitSCC(&::scc_info_FriendRequest_friend_2eproto.base);
        return *internal_default_instance();
      }


      void FriendRequest::Clear() {
        // @@protoc_insertion_point(message_clear_start:fixbug.FriendRequest)
        ::google::protobuf::uint32 cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void)cached_has_bits;

        id_ = 0u;
        _internal_metadata_.Clear();
      }

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
      const char* FriendRequest::_InternalParse(const char* begin, const char* end, void* object,
        ::google::protobuf::internal::ParseContext* ctx) {
        auto msg = static_cast<FriendRequest*>(object);
        ::google::protobuf::int32 size; (void)size;
        int depth; (void)depth;
        ::google::protobuf::uint32 tag;
        ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
        auto ptr = begin;
        while (ptr < end) {
          ptr = ::google::protobuf::io::Parse32(ptr, &tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          switch (tag >> 3) {
            // uint32 id = 1;
          case 1: {
            if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
            msg->set_id(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            break;
          }
          default: {
          handle_unusual:
            if ((tag & 7) == 4 || tag == 0) {
              ctx->EndGroup(tag);
              return ptr;
            }
            auto res = UnknownFieldParse(tag, { _InternalParse, msg },
              ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
            ptr = res.first;
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
            if (res.second) return ptr;
          }
          }  // switch
        }  // while
        return ptr;
      }
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
      bool FriendRequest::MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
        ::google::protobuf::uint32 tag;
        // @@protoc_insertion_point(parse_start:fixbug.FriendRequest)
        for (;;) {
          ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
          tag = p.first;
          if (!p.second) goto handle_unusual;
          switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
            // uint32 id = 1;
          case 1: {
            if (static_cast<::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

              DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                  input, &id_)));
            }
            else {
              goto handle_unusual;
            }
            break;
          }

          default: {
          handle_unusual:
            if (tag == 0) {
              goto success;
            }
            DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
            break;
          }
          }
        }
      success:
        // @@protoc_insertion_point(parse_success:fixbug.FriendRequest)
        return true;
      failure:
        // @@protoc_insertion_point(parse_failure:fixbug.FriendRequest)
        return false;
#undef DO_
      }
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

      void FriendRequest::SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const {
        // @@protoc_insertion_point(serialize_start:fixbug.FriendRequest)
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void)cached_has_bits;

        // uint32 id = 1;
        if (this->id() != 0) {
          ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
        }

        if (_internal_metadata_.have_unknown_fields()) {
          ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
            _internal_metadata_.unknown_fields(), output);
        }
        // @@protoc_insertion_point(serialize_end:fixbug.FriendRequest)
      }

      ::google::protobuf::uint8* FriendRequest::InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::uint8* target) const {
        // @@protoc_insertion_point(serialize_to_array_start:fixbug.FriendRequest)
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void)cached_has_bits;

        // uint32 id = 1;
        if (this->id() != 0) {
          target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
        }

        if (_internal_metadata_.have_unknown_fields()) {
          target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields(), target);
        }
        // @@protoc_insertion_point(serialize_to_array_end:fixbug.FriendRequest)
        return target;
      }

      size_t FriendRequest::ByteSizeLong() const {
        // @@protoc_insertion_point(message_byte_size_start:fixbug.FriendRequest)
        size_t total_size = 0;

        if (_internal_metadata_.have_unknown_fields()) {
          total_size +=
            ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
              _internal_metadata_.unknown_fields());
        }
        ::google::protobuf::uint32 cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void)cached_has_bits;

        // uint32 id = 1;
        if (this->id() != 0) {
          total_size += 1 +
            ::google::protobuf::internal::WireFormatLite::UInt32Size(
              this->id());
        }

        int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
        SetCachedSize(cached_size);
        return total_size;
      }

      void FriendRequest::MergeFrom(const ::google::protobuf::Message& from) {
        // @@protoc_insertion_point(generalized_merge_from_start:fixbug.FriendRequest)
        GOOGLE_DCHECK_NE(&from, this);
        const FriendRequest* source =
          ::google::protobuf::DynamicCastToGenerated<FriendRequest>(
            &from);
        if (source == nullptr) {
          // @@protoc_insertion_point(generalized_merge_from_cast_fail:fixbug.FriendRequest)
          ::google::protobuf::internal::ReflectionOps::Merge(from, this);
        }
        else {
          // @@protoc_insertion_point(generalized_merge_from_cast_success:fixbug.FriendRequest)
          MergeFrom(*source);
        }
      }

      void FriendRequest::MergeFrom(const FriendRequest& from) {
        // @@protoc_insertion_point(class_specific_merge_from_start:fixbug.FriendRequest)
        GOOGLE_DCHECK_NE(&from, this);
        _internal_metadata_.MergeFrom(from._internal_metadata_);
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void)cached_has_bits;

        if (from.id() != 0) {
          set_id(from.id());
        }
      }

      void FriendRequest::CopyFrom(const ::google::protobuf::Message& from) {
        // @@protoc_insertion_point(generalized_copy_from_start:fixbug.FriendRequest)
        if (&from == this) return;
        Clear();
        MergeFrom(from);
      }

      void FriendRequest::CopyFrom(const FriendRequest& from) {
        // @@protoc_insertion_point(class_specific_copy_from_start:fixbug.FriendRequest)
        if (&from == this) return;
        Clear();
        MergeFrom(from);
      }

      bool FriendRequest::IsInitialized() const {
        return true;
      }

      void FriendRequest::Swap(FriendRequest* other) {
        if (other == this) return;
        InternalSwap(other);
      }
      void FriendRequest::InternalSwap(FriendRequest* other) {
        using std::swap;
        _internal_metadata_.Swap(&other->_internal_metadata_);
        swap(id_, other->id_);
      }

      ::google::protobuf::Metadata FriendRequest::GetMetadata() const {
        ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_friend_2eproto);
        return ::file_level_metadata_friend_2eproto[kIndexInFileMessages];
      }


      // ===================================================================

      void FriendResponse::InitAsDefaultInstance() {
        ::fixbug::_FriendResponse_default_instance_._instance.get_mutable()->result_ = const_cast<::fixbug::ResultCode1*>(
          ::fixbug::ResultCode1::internal_default_instance());
      }
      class FriendResponse::HasBitSetters {
      public:
        static const ::fixbug::ResultCode1& result(const FriendResponse* msg);
      };

      const ::fixbug::ResultCode1&
        FriendResponse::HasBitSetters::result(const FriendResponse* msg) {
        return *msg->result_;
      }
#if !defined(_MSC_VER) || _MSC_VER >= 1900
      const int FriendResponse::kResultFieldNumber;
      const int FriendResponse::kFriendsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

      FriendResponse::FriendResponse()
        : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
        SharedCtor();
        // @@protoc_insertion_point(constructor:fixbug.FriendResponse)
      }
      FriendResponse::FriendResponse(const FriendResponse& from)
        : ::google::protobuf::Message(),
        _internal_metadata_(nullptr),
        friends_(from.friends_) {
        _internal_metadata_.MergeFrom(from._internal_metadata_);
        if (from.has_result()) {
          result_ = new ::fixbug::ResultCode1(*from.result_);
        }
        else {
          result_ = nullptr;
        }
        // @@protoc_insertion_point(copy_constructor:fixbug.FriendResponse)
      }

      void FriendResponse::SharedCtor() {
        ::google::protobuf::internal::InitSCC(
          &scc_info_FriendResponse_friend_2eproto.base);
        result_ = nullptr;
      }

      FriendResponse::~FriendResponse() {
        // @@protoc_insertion_point(destructor:fixbug.FriendResponse)
        SharedDtor();
      }

      void FriendResponse::SharedDtor() {
        if (this != internal_default_instance()) delete result_;
      }

      void FriendResponse::SetCachedSize(int size) const {
        _cached_size_.Set(size);
      }
      const FriendResponse& FriendResponse::default_instance() {
        ::google::protobuf::internal::InitSCC(&::scc_info_FriendResponse_friend_2eproto.base);
        return *internal_default_instance();
      }


      void FriendResponse::Clear() {
        // @@protoc_insertion_point(message_clear_start:fixbug.FriendResponse)
        ::google::protobuf::uint32 cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void)cached_has_bits;

        friends_.Clear();
        if (GetArenaNoVirtual() == nullptr && result_ != nullptr) {
          delete result_;
        }
        result_ = nullptr;
        _internal_metadata_.Clear();
      }

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
      const char* FriendResponse::_InternalParse(const char* begin, const char* end, void* object,
        ::google::protobuf::internal::ParseContext* ctx) {
        auto msg = static_cast<FriendResponse*>(object);
        ::google::protobuf::int32 size; (void)size;
        int depth; (void)depth;
        ::google::protobuf::uint32 tag;
        ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
        auto ptr = begin;
        while (ptr < end) {
          ptr = ::google::protobuf::io::Parse32(ptr, &tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          switch (tag >> 3) {
            // .fixbug.ResultCode1 result = 1;
          case 1: {
            if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
            ptr = ::google::protobuf::io::ReadSize(ptr, &size);
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            parser_till_end = ::fixbug::ResultCode1::_InternalParse;
            object = msg->mutable_result();
            if (size > end - ptr) goto len_delim_till_end;
            ptr += size;
            GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              { parser_till_end, object }, ptr - size, ptr));
            break;
          }
                // repeated bytes friends = 2;
          case 2: {
            if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
            do {
              ptr = ::google::protobuf::io::ReadSize(ptr, &size);
              GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
              object = msg->add_friends();
              if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
                parser_till_end = ::google::protobuf::internal::GreedyStringParser;
                goto string_till_end;
              }
              GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
              ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
              ptr += size;
              if (ptr >= end) break;
            } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
            break;
          }
          default: {
          handle_unusual:
            if ((tag & 7) == 4 || tag == 0) {
              ctx->EndGroup(tag);
              return ptr;
            }
            auto res = UnknownFieldParse(tag, { _InternalParse, msg },
              ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
            ptr = res.first;
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
            if (res.second) return ptr;
          }
          }  // switch
        }  // while
        return ptr;
      string_till_end:
        static_cast<::std::string*>(object)->clear();
        static_cast<::std::string*>(object)->reserve(size);
        goto len_delim_till_end;
      len_delim_till_end:
        return ctx->StoreAndTailCall(ptr, end, { _InternalParse, msg },
          { parser_till_end, object }, size);
      }
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
      bool FriendResponse::MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
        ::google::protobuf::uint32 tag;
        // @@protoc_insertion_point(parse_start:fixbug.FriendResponse)
        for (;;) {
          ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
          tag = p.first;
          if (!p.second) goto handle_unusual;
          switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
            // .fixbug.ResultCode1 result = 1;
          case 1: {
            if (static_cast<::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
              DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, mutable_result()));
            }
            else {
              goto handle_unusual;
            }
            break;
          }

                // repeated bytes friends = 2;
          case 2: {
            if (static_cast<::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
              DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_friends()));
            }
            else {
              goto handle_unusual;
            }
            break;
          }

          default: {
          handle_unusual:
            if (tag == 0) {
              goto success;
            }
            DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
            break;
          }
          }
        }
      success:
        // @@protoc_insertion_point(parse_success:fixbug.FriendResponse)
        return true;
      failure:
        // @@protoc_insertion_point(parse_failure:fixbug.FriendResponse)
        return false;
#undef DO_
      }
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

      void FriendResponse::SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const {
        // @@protoc_insertion_point(serialize_start:fixbug.FriendResponse)
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void)cached_has_bits;

        // .fixbug.ResultCode1 result = 1;
        if (this->has_result()) {
          ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, HasBitSetters::result(this), output);
        }

        // repeated bytes friends = 2;
        for (int i = 0, n = this->friends_size(); i < n; i++) {
          ::google::protobuf::internal::WireFormatLite::WriteBytes(
            2, this->friends(i), output);
        }

        if (_internal_metadata_.have_unknown_fields()) {
          ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
            _internal_metadata_.unknown_fields(), output);
        }
        // @@protoc_insertion_point(serialize_end:fixbug.FriendResponse)
      }

      ::google::protobuf::uint8* FriendResponse::InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::uint8* target) const {
        // @@protoc_insertion_point(serialize_to_array_start:fixbug.FriendResponse)
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void)cached_has_bits;

        // .fixbug.ResultCode1 result = 1;
        if (this->has_result()) {
          target = ::google::protobuf::internal::WireFormatLite::
            InternalWriteMessageToArray(
              1, HasBitSetters::result(this), target);
        }

        // repeated bytes friends = 2;
        for (int i = 0, n = this->friends_size(); i < n; i++) {
          target = ::google::protobuf::internal::WireFormatLite::
            WriteBytesToArray(2, this->friends(i), target);
        }

        if (_internal_metadata_.have_unknown_fields()) {
          target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields(), target);
        }
        // @@protoc_insertion_point(serialize_to_array_end:fixbug.FriendResponse)
        return target;
      }

      size_t FriendResponse::ByteSizeLong() const {
        // @@protoc_insertion_point(message_byte_size_start:fixbug.FriendResponse)
        size_t total_size = 0;

        if (_internal_metadata_.have_unknown_fields()) {
          total_size +=
            ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
              _internal_metadata_.unknown_fields());
        }
        ::google::protobuf::uint32 cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void)cached_has_bits;

        // repeated bytes friends = 2;
        total_size += 1 *
          ::google::protobuf::internal::FromIntSize(this->friends_size());
        for (int i = 0, n = this->friends_size(); i < n; i++) {
          total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
            this->friends(i));
        }

        // .fixbug.ResultCode1 result = 1;
        if (this->has_result()) {
          total_size += 1 +
            ::google::protobuf::internal::WireFormatLite::MessageSize(
              *result_);
        }

        int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
        SetCachedSize(cached_size);
        return total_size;
      }

      void FriendResponse::MergeFrom(const ::google::protobuf::Message& from) {
        // @@protoc_insertion_point(generalized_merge_from_start:fixbug.FriendResponse)
        GOOGLE_DCHECK_NE(&from, this);
        const FriendResponse* source =
          ::google::protobuf::DynamicCastToGenerated<FriendResponse>(
            &from);
        if (source == nullptr) {
          // @@protoc_insertion_point(generalized_merge_from_cast_fail:fixbug.FriendResponse)
          ::google::protobuf::internal::ReflectionOps::Merge(from, this);
        }
        else {
          // @@protoc_insertion_point(generalized_merge_from_cast_success:fixbug.FriendResponse)
          MergeFrom(*source);
        }
      }

      void FriendResponse::MergeFrom(const FriendResponse& from) {
        // @@protoc_insertion_point(class_specific_merge_from_start:fixbug.FriendResponse)
        GOOGLE_DCHECK_NE(&from, this);
        _internal_metadata_.MergeFrom(from._internal_metadata_);
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void)cached_has_bits;

        friends_.MergeFrom(from.friends_);
        if (from.has_result()) {
          mutable_result()->::fixbug::ResultCode1::MergeFrom(from.result());
        }
      }

      void FriendResponse::CopyFrom(const ::google::protobuf::Message& from) {
        // @@protoc_insertion_point(generalized_copy_from_start:fixbug.FriendResponse)
        if (&from == this) return;
        Clear();
        MergeFrom(from);
      }

      void FriendResponse::CopyFrom(const FriendResponse& from) {
        // @@protoc_insertion_point(class_specific_copy_from_start:fixbug.FriendResponse)
        if (&from == this) return;
        Clear();
        MergeFrom(from);
      }

      bool FriendResponse::IsInitialized() const {
        return true;
      }

      void FriendResponse::Swap(FriendResponse* other) {
        if (other == this) return;
        InternalSwap(other);
      }
      void FriendResponse::InternalSwap(FriendResponse* other) {
        using std::swap;
        _internal_metadata_.Swap(&other->_internal_metadata_);
        friends_.InternalSwap(CastToBase(&other->friends_));
        swap(result_, other->result_);
      }

      ::google::protobuf::Metadata FriendResponse::GetMetadata() const {
        ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_friend_2eproto);
        return ::file_level_metadata_friend_2eproto[kIndexInFileMessages];
      }


      // ===================================================================

      FriendServiceRpc::~FriendServiceRpc() {}

      const ::google::protobuf::ServiceDescriptor* FriendServiceRpc::descriptor() {
        ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_friend_2eproto);
        return file_level_service_descriptors_friend_2eproto[0];
      }

      const ::google::protobuf::ServiceDescriptor* FriendServiceRpc::GetDescriptor() {
        return descriptor();
      }

      void FriendServiceRpc::GetFriendList(::google::protobuf::RpcController* controller,
        const ::fixbug::FriendRequest*,
        ::fixbug::FriendResponse*,
        ::google::protobuf::Closure* done) {
        controller->SetFailed("Method GetFriendList() not implemented.");
        done->Run();
      }

      void FriendServiceRpc::CallMethod(const ::google::protobuf::MethodDescriptor* method,
        ::google::protobuf::RpcController* controller,
        const ::google::protobuf::Message* request,
        ::google::protobuf::Message* response,
        ::google::protobuf::Closure* done) {
        GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_friend_2eproto[0]);
        switch (method->index()) {
        case 0:
          GetFriendList(controller,
            ::google::protobuf::down_cast<const ::fixbug::FriendRequest*>(request),
            ::google::protobuf::down_cast<::fixbug::FriendResponse*>(response),
            done);
          break;
        default:
          GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
          break;
        }
      }

      const ::google::protobuf::Message& FriendServiceRpc::GetRequestPrototype(
        const ::google::protobuf::MethodDescriptor* method) const {
        GOOGLE_DCHECK_EQ(method->service(), descriptor());
        switch (method->index()) {
        case 0:
          return ::fixbug::FriendRequest::default_instance();
        default:
          GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
          return *::google::protobuf::MessageFactory::generated_factory()
            ->GetPrototype(method->input_type());
        }
      }

      const ::google::protobuf::Message& FriendServiceRpc::GetResponsePrototype(
        const ::google::protobuf::MethodDescriptor* method) const {
        GOOGLE_DCHECK_EQ(method->service(), descriptor());
        switch (method->index()) {
        case 0:
          return ::fixbug::FriendResponse::default_instance();
        default:
          GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
          return *::google::protobuf::MessageFactory::generated_factory()
            ->GetPrototype(method->output_type());
        }
      }

      FriendServiceRpc_Stub::FriendServiceRpc_Stub(::google::protobuf::RpcChannel* channel)
        : channel_(channel), owns_channel_(false) {
      }
      FriendServiceRpc_Stub::FriendServiceRpc_Stub(
        ::google::protobuf::RpcChannel* channel,
        ::google::protobuf::Service::ChannelOwnership ownership)
        : channel_(channel),
        owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {
      }
      FriendServiceRpc_Stub::~FriendServiceRpc_Stub() {
        if (owns_channel_) delete channel_;
      }

      void FriendServiceRpc_Stub::GetFriendList(::google::protobuf::RpcController* controller,
        const ::fixbug::FriendRequest* request,
        ::fixbug::FriendResponse* response,
        ::google::protobuf::Closure* done) {
        channel_->CallMethod(descriptor()->method(0),
          controller, request, response, done);
      }

      // @@protoc_insertion_point(namespace_scope)
    }  // namespace fixbug
    namespace google {
      namespace protobuf {
        template<> PROTOBUF_NOINLINE::fixbug::ResultCode1* Arena::CreateMaybeMessage< ::fixbug::ResultCode1 >(Arena* arena) {
          return Arena::CreateInternal< ::fixbug::ResultCode1 >(arena);
        }
        template<> PROTOBUF_NOINLINE::fixbug::FriendRequest* Arena::CreateMaybeMessage< ::fixbug::FriendRequest >(Arena* arena) {
          return Arena::CreateInternal< ::fixbug::FriendRequest >(arena);
        }
        template<> PROTOBUF_NOINLINE::fixbug::FriendResponse* Arena::CreateMaybeMessage< ::fixbug::FriendResponse >(Arena* arena) {
          return Arena::CreateInternal< ::fixbug::FriendResponse >(arena);
        }
      }  // namespace protobuf
    }  // namespace google

    // @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
